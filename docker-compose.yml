services:
  pihole:
    image: pihole/pihole:2025.08.0
    dns:
      - 127.0.0.1
      - 1.1.1.1
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "80:80/tcp"
    cap_add:
      - NET_ADMIN
      - SYS_NICE
      - SYS_TIME
    network_mode: "host"
    environment:
      FTLCONF_dns_upstreams: 127.0.0.1#5053;127.0.0.1#5053
      FTLCONF_dns_dnssec: "true"
      FTLCONF_dns_listeningMode: "local"
      FTLCONF_misc_dnsmasq_lines: "proxy-dnssec"
      FTLCONF_database_maxDBdays: 30
      FTLCONF_dns_domainNeeded: "true"
      FTLCONF_dns_bogusPriv: "true"
      FTLCONF_webserver_tls_cert: /combined/${DOMAIN}/tls.pem
      FTLCONF_webserver_domain: ${DOMAIN}
      FTLCONF_dns_hostRecord: "pi.hole,${ServerIP},${ServerIPv6}"
      WEBPASSWORD_FILE: pihole_webpasswd
    secrets:
      - pihole_webpassword
    volumes:
      - ./config-pihole:/etc/pihole/
      - certs-combined:/combined:ro
    restart: always
    healthcheck:
      test: dig google.com @${ServerIP} +notcp && dig google.com @${ServerIPv6} +notcp
      interval: 15s
      timeout: 2s
      retries: 3
      start_period: 60s
    labels:
      autoheal: "true"
    depends_on:
      cert-combiner:
        condition: service_healthy
  cloudflared:
    image: crazymax/cloudflared@sha256:cbca5625b5e53cb2ff7525a6d84e685182c0e25ae9436ac4939760e81802c344
    restart: always
    ports:
      - "5053:5053"
      - "5053:5053/udp"
    environment:
      TUNNEL_DNS_PORT: 5053
      TUNNEL_DNS_UPSTREAM: "https://1.1.1.1/dns-query,https://1.0.0.1/dns-query"
    healthcheck:
      test: test $$(wget -qO - http://127.0.0.1:49312/healthcheck) = OK
      interval: 5s
      timeout: 1s
      retries: 10
      start_period: 15s
    labels:
      autoheal: "true"
  autoheal:
    image: pschmitt/autoheal@sha256:a583ec8721bac6438e446c2b4357a5e347a9d5519efb0877652dbe268d9e5aa6
    restart: always
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'
  certbot:
    image: certbot/dns-cloudflare
    user: "1000:1000"
    volumes:
      - ./config-certbot:/certbot
    secrets:
      - source: cloudflare_api_token_ini
        target: cloudflare.ini
    restart: always
    entrypoint: /bin/sh
    command:
      - -c
      - |
        while true; do
          certbot renew \
            --logs-dir /certbot/logs \
            --work-dir /certbot/tmp \
            --config-dir /certbot/cfg \
            --non-interactive \
            --agree-tos \
            --dns-cloudflare \
            --dns-cloudflare-credentials /run/secrets/cloudflare.ini \
            --dns-cloudflare-propagation-seconds 30 \
            --email ${CLOUDFLARE_EMAIL};
          sleep 86400;
        done
  cert-combiner:
    image: alpine
    entrypoint: /bin/sh
    command:
      - -c
      - |
        while true; do
          COMBINED=/combined/${DOMAIN}/tls.pem
          PRIVKEY=/certs/cfg/live/${DOMAIN}/privkey.pem
          FULLCHAIN=/certs/cfg/live/${DOMAIN}/fullchain.pem
          mkdir -p /combined/${DOMAIN}
          NEWSUM="$$(md5sum $$PRIVKEY $$FULLCHAIN)"
          OLDSUM_FILE="/combined/${DOMAIN}/.checksum"

          if [ ! -f "$$COMBINED" ] || [ "$$NEWSUM" != "$$(cat $$OLDSUM_FILE 2>/dev/null)" ]; then
            echo "[combiner] Detected change. Rebuilding cert."
            cat $$PRIVKEY $$FULLCHAIN > $$COMBINED && chmod 644 $$COMBINED
            echo "$$NEWSUM" > $$OLDSUM_FILE
          fi

          sleep 3600
        done
    environment:
      - DOMAIN=${DOMAIN}
    volumes:
      - ./config-certbot:/certs:ro
      - certs-combined:/combined
    restart: always
    healthcheck:
      test: ["CMD", "sh", "-c", "test -f /combined/${DOMAIN}/tls.pem"]
      interval: 30s
      timeout: 3s
      retries: 10
      start_period: 3s


  stunnel:
    image: gsmlg/stunnel:latest
    network_mode: "host"
    volumes:
      - ./config-certbot:/certs:ro
      - ./config-stunnel:/etc/stunnel
    environment:
      - DOMAIN=${DOMAIN}
    entrypoint: /etc/stunnel/entrypoint.sh

secrets:
  cloudflare_api_token_ini:
    file: secrets/certbot-cloudflare.ini
  pihole_webpassword:
    file: secrets/webpassword

volumes:
  certs-combined:
    driver: local
    driver_opts:
      type: tmpfs
      device: tmpfs
